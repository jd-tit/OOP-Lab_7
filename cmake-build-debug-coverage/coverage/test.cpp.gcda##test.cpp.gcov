        -:    0:Source:C:/Projects/fac/OOP/Lab5_Contract_de_studii/test.cpp
        -:    0:Graph:C:\Projects\fac\OOP\Lab5_Contract_de_studii\cmake-build-debug-coverage\CMakeFiles\Lab5_Contract_de_studii.dir\test.cpp.gcno
        -:    0:Data:C:\Projects\fac\OOP\Lab5_Contract_de_studii\cmake-build-debug-coverage\CMakeFiles\Lab5_Contract_de_studii.dir\test.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by jdt on 2022-03-31.
        -:    3://
        -:    4:
        -:    5:#include "test.h"
        -:    6:#include "domain.h"
        -:    7:#include "validate.h"
        -:    8:#include "repo.h"
        -:    9:#include "controller.h"
        -:   10:
        -:   11:#include <cassert>
        -:   12:
function _Z10testDomainv called 1 returned 100% blocks executed 57%
        1:   13:void testDomain(){
        2:   14:  Course c{"Painting", "optional", "Bob Ross", 4, 0};
        1:   14-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   14-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   14-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   14-block  3
call   12 returned 1
call   13 returned 1
call   14 returned 1
call   15 returned 1
call   16 returned 1
call   17 returned 1
    $$$$$:   14-block  4
    $$$$$:   14-block  5
    $$$$$:   14-block  6
    $$$$$:   14-block  7
    $$$$$:   14-block  8
        -:   15:
       1*:   16:  assert(c.to_str() == "ID: 0; Name: Painting; Type: optional; Teacher: Bob Ross; Hours per week: 4");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   16-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   16-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   16-block  2
    %%%%%:   16-block  3
        1:   16-block  4
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   16-block  5
call   11 returned 1
    $$$$$:   16-block  6
branch 12 never executed
branch 13 never executed
    $$$$$:   16-block  7
call   14 never executed
    $$$$$:   16-block  8
        1:   17:  c.set_name("Racketeering");
        1:   17-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   17-block  1
call    4 returned 1
call    5 returned 1
call    6 returned 1
    $$$$$:   17-block  2
call    7 never executed
    $$$$$:   17-block  3
       1*:   18:  assert(c.get_name() == "Racketeering");
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:   18-block  0
call    4 never executed
branch  5 never executed
branch  6 never executed
        1:   18-block  1
    %%%%%:   18-block  2
        -:   19:
        1:   20:  c.set_teacher("Mike");
        1:   20-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   20-block  1
call    4 returned 1
call    5 returned 1
call    6 returned 1
    $$$$$:   20-block  2
call    7 never executed
    $$$$$:   20-block  3
       1*:   21:  assert(c.get_teacher() == "Mike");
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:   21-block  0
call    4 never executed
branch  5 never executed
branch  6 never executed
        1:   21-block  1
    %%%%%:   21-block  2
        -:   22:
        1:   23:  c.set_type("Maybe");
        1:   23-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   23-block  1
call    4 returned 1
call    5 returned 1
call    6 returned 1
    $$$$$:   23-block  2
call    7 never executed
    $$$$$:   23-block  3
       1*:   24:  assert(c.get_type() == "Maybe");
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:   24-block  0
call    4 never executed
branch  5 never executed
branch  6 never executed
        1:   24-block  1
    %%%%%:   24-block  2
        -:   25:
        1:   26:  c.set_hpw(1);
        1:   26-block  0
call    0 returned 1
       1*:   27:  assert(c.getHPW() == 1);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   27-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
        1:   27-block  1
    %%%%%:   27-block  2
        -:   28:
       1*:   29:  assert(c.get_id() == 0);
        1:   29-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   29-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   29-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   29-block  3
    %%%%%:   29-block  4
        1:   30:}
        1:   30-block  0
call    0 returned 1
    $$$$$:   30-block  1
call    1 never executed
        -:   31:
function _Z12testValidatev called 1 returned 100% blocks executed 53%
        1:   32:void testValidate(){
       1*:   33:  assert(is_valid_string("Cooking"));
        1:   33-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   33-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   33-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   33-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
        1:   33-block  4
    %%%%%:   33-block  5
        1:   33-block  6
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:   33-block  7
call   14 returned 1
        1:   33-block  8
branch 15 taken 1 (fallthrough)
branch 16 taken 0
        1:   33-block  9
call   17 returned 1
    $$$$$:   33-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:   33-block 11
call   20 never executed
    $$$$$:   33-block 12
    $$$$$:   33-block 13
branch 21 never executed
branch 22 never executed
    $$$$$:   33-block 14
call   23 never executed
    $$$$$:   33-block 15
call   24 never executed
       1*:   34:  assert(!is_valid_string(""));
        1:   34-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   34-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   34-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   34-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
        1:   34-block  4
    %%%%%:   34-block  5
        1:   34-block  6
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:   34-block  7
call   14 returned 1
        1:   34-block  8
branch 15 taken 1 (fallthrough)
branch 16 taken 0
        1:   34-block  9
call   17 returned 1
    $$$$$:   34-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:   34-block 11
call   20 never executed
    $$$$$:   34-block 12
    $$$$$:   34-block 13
branch 21 never executed
branch 22 never executed
    $$$$$:   34-block 14
call   23 never executed
    $$$$$:   34-block 15
call   24 never executed
       1*:   35:  assert(!is_valid_string("\""));
        1:   35-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   35-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   35-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   35-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
        1:   35-block  4
    %%%%%:   35-block  5
        1:   35-block  6
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:   35-block  7
call   14 returned 1
        1:   35-block  8
branch 15 taken 1 (fallthrough)
branch 16 taken 0
        1:   35-block  9
call   17 returned 1
    $$$$$:   35-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:   35-block 11
call   20 never executed
    $$$$$:   35-block 12
    $$$$$:   35-block 13
branch 21 never executed
branch 22 never executed
    $$$$$:   35-block 14
call   23 never executed
    $$$$$:   35-block 15
call   24 never executed
       1*:   36:  assert(!is_valid_string("A"));
        1:   36-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   36-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   36-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   36-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
        1:   36-block  4
    %%%%%:   36-block  5
        1:   36-block  6
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:   36-block  7
call   14 returned 1
        1:   36-block  8
branch 15 taken 1 (fallthrough)
branch 16 taken 0
        1:   36-block  9
call   17 returned 1
    $$$$$:   36-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:   36-block 11
call   20 never executed
    $$$$$:   36-block 12
    $$$$$:   36-block 13
branch 21 never executed
branch 22 never executed
    $$$$$:   36-block 14
call   23 never executed
        -:   37:
       42:   38:  for(int i = 1; i < 24 * 7 / 4; ++i) {
        1:   38-block  0
       41:   38-block  1
       42:   38-block  2
branch  0 taken 41
branch  1 taken 1 (fallthrough)
      41*:   39:    assert(is_valid_hours_per_week(i));
       41:   39-block  0
call    0 returned 41
branch  1 taken 0 (fallthrough)
branch  2 taken 41
    %%%%%:   39-block  1
call    3 never executed
       41:   39-block  2
        -:   40:  }
       1*:   41:  assert(!is_valid_hours_per_week(0));
        1:   41-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   41-block  1
call    3 never executed
        1:   41-block  2
       1*:   42:  assert(!is_valid_hours_per_week(100));
        1:   42-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   42-block  1
call    3 never executed
        1:   42-block  2
        1:   43:}
        1:   43-block  0
        -:   44:
function _Z8testRepov called 1 returned 100% blocks executed 52%
        1:   45:void testRepo(){
        1:   46:    Repo<Course> repo;
        1:   46-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        2:   47:    Course c1{"Painting", "optional", "Bob Ross", 4, 0};
        1:   47-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   47-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   47-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   47-block  3
call   12 returned 1
call   13 returned 1
call   14 returned 1
call   15 returned 1
call   16 returned 1
call   17 returned 1
    $$$$$:   47-block  4
    $$$$$:   47-block  5
    $$$$$:   47-block  6
    $$$$$:   47-block  7
    $$$$$:   47-block  8
        2:   48:    Course c2{"Math", "optional", "Terry Tao", 8, 1};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   48-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   48-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   48-block  2
call   12 returned 1
call   13 returned 1
call   14 returned 1
call   15 returned 1
call   16 returned 1
call   17 returned 1
    $$$$$:   48-block  3
    $$$$$:   48-block  4
    $$$$$:   48-block  5
    $$$$$:   48-block  6
    $$$$$:   48-block  7
        2:   49:    Course c3{"Music", "optional", "Lena Raine", 5, 2};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   49-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   49-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   49-block  2
call   12 returned 1
call   13 returned 1
call   14 returned 1
call   15 returned 1
call   16 returned 1
call   17 returned 1
    $$$$$:   49-block  3
    $$$$$:   49-block  4
    $$$$$:   49-block  5
    $$$$$:   49-block  6
    $$$$$:   49-block  7
        -:   50:
        1:   51:    repo.add(c1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   52:    repo.add(c2);
        1:   52-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   53:    repo.add(c3);
        1:   53-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   54:
        5:   55:    Course courses[] = {c1, c2,c3};
        1:   55-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   55-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   55-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   55-block  3
        3:   55-block  4
call    9 returned 3
    $$$$$:   55-block  5
    $$$$$:   55-block  6
call   10 never executed
    $$$$$:   55-block  7
    $$$$$:   55-block  8
call   11 never executed
        -:   56:
       1*:   57:    assert(repo.get_size() == 3);
        1:   57-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   57-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   57-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   57-block  3
    %%%%%:   57-block  4
        4:   58:    for(size_t i = 0; i < repo.get_size(); ++i){
        1:   58-block  0
        4:   58-block  1
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   58-block  2
branch  3 taken 3
branch  4 taken 1 (fallthrough)
        3:   59:        const auto& res_c = repo.at(i);
        3:   59-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
       3*:   60:        assert(res_c.to_str() == courses[i].to_str());
        3:   60-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   60-block  1
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   60-block  2
call    6 returned 3
branch  7 taken 0 (fallthrough)
branch  8 taken 3
    %%%%%:   60-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
        3:   60-block  4
    %%%%%:   60-block  5
        3:   60-block  6
branch 12 taken 3 (fallthrough)
branch 13 taken 0
        3:   60-block  7
call   14 returned 3
        3:   60-block  8
branch 15 taken 3 (fallthrough)
branch 16 taken 0
        3:   60-block  9
call   17 returned 3
        3:   60-block 10
    $$$$$:   60-block 11
branch 18 never executed
branch 19 never executed
    $$$$$:   60-block 12
call   20 never executed
    $$$$$:   60-block 13
    $$$$$:   60-block 14
branch 21 never executed
branch 22 never executed
    $$$$$:   60-block 15
call   23 never executed
    $$$$$:   60-block 16
        -:   61:    }
        -:   62:
        1:   63:    int i = 0;
        4:   64:    for(const auto& res_c : repo){
        1:   64-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   64-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   64-block  2
        3:   64-block  3
call    6 returned 3
        4:   64-block  4
call    7 returned 4
branch  8 taken 3
branch  9 taken 1 (fallthrough)
       3*:   65:        assert(res_c.to_str() == courses[i].to_str());
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   65-block  0
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   65-block  1
call    6 returned 3
branch  7 taken 0 (fallthrough)
branch  8 taken 3
    %%%%%:   65-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
        3:   65-block  3
    %%%%%:   65-block  4
        3:   65-block  5
branch 12 taken 3 (fallthrough)
branch 13 taken 0
        3:   65-block  6
call   14 returned 3
        3:   65-block  7
branch 15 taken 3 (fallthrough)
branch 16 taken 0
        3:   65-block  8
call   17 returned 3
    $$$$$:   65-block  9
branch 18 never executed
branch 19 never executed
    $$$$$:   65-block 10
call   20 never executed
    $$$$$:   65-block 11
    $$$$$:   65-block 12
branch 21 never executed
branch 22 never executed
    $$$$$:   65-block 13
call   23 never executed
    $$$$$:   65-block 14
        3:   66:        ++i;
        3:   66-block  0
call    0 returned 3
        -:   67:    }
        -:   68:
        -:   69:
        1:   70:    auto& c = repo.find_by_id(1);
        1:   70-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   71:    assert(c.to_str() == c2.to_str());
        1:   71-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   71-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   71-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   71-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
        1:   71-block  4
    %%%%%:   71-block  5
        1:   71-block  6
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:   71-block  7
call   14 returned 1
        1:   71-block  8
branch 15 taken 1 (fallthrough)
branch 16 taken 0
        1:   71-block  9
call   17 returned 1
    $$$$$:   71-block 10
branch 18 never executed
branch 19 never executed
    $$$$$:   71-block 11
call   20 never executed
    $$$$$:   71-block 12
    $$$$$:   71-block 13
branch 21 never executed
branch 22 never executed
    $$$$$:   71-block 14
call   23 never executed
    $$$$$:   71-block 15
        -:   72:
        1:   73:    repo.remove_by_id(2);
        1:   73-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   74:    assert(repo.get_size() == 2);
        1:   74-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   74-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   74-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   74-block  3
    %%%%%:   74-block  4
        -:   75:
        1:   76:    auto& vect = repo.getVector();
        1:   76-block  0
call    0 returned 1
       1*:   77:    assert(vect.size() == 2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   77-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
        1:   77-block  1
    %%%%%:   77-block  2
        -:   78:
        -:   79:    try{
        1:   80:        repo.find_by_id(100);
        1:   80-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    #####:   81:        assert(false);
    %%%%%:   81-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   82:    }
        1:   83:    catch (std::out_of_range& e){}
        1:   83-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   83-block  1
call    2 returned 1
call    3 returned 1
        -:   84:
        -:   85:    try{
        1:   86:        repo.remove_by_id(100);
        1:   86-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
    #####:   87:        assert(false);
    %%%%%:   87-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   88:    }
        1:   89:    catch (std::out_of_range& e){}
        1:   89-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   89-block  1
call    2 returned 1
call    3 returned 1
        5:   90:}
        4:   90-block  0
branch  0 taken 3 (fallthrough)
branch  1 taken 1
        1:   90-block  1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
    $$$$$:   90-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:   90-block  3
call    8 never executed
    $$$$$:   90-block  4
call    9 never executed
    $$$$$:   90-block  5
call   10 never executed
    $$$$$:   90-block  6
call   11 never executed
        -:   91:
function _Z11testControlv called 1 returned 100% blocks executed 57%
        1:   92:void testControl(){
        1:   93:    ContractController ctrl;
        1:   93-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   94:    ctrl.add_course("Painting",  "Bob Ross", "optional", "4");
        1:   94-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   94-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   94-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   94-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:   94-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:   94-block  5
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
    $$$$$:   94-block  6
call   27 never executed
    $$$$$:   94-block  7
    $$$$$:   94-block  8
call   28 never executed
    $$$$$:   94-block  9
    $$$$$:   94-block 10
call   29 never executed
    $$$$$:   94-block 11
    $$$$$:   94-block 12
call   30 never executed
    $$$$$:   94-block 13
    $$$$$:   94-block 14
call   31 never executed
    $$$$$:   94-block 15
    $$$$$:   94-block 16
call   32 never executed
    $$$$$:   94-block 17
    $$$$$:   94-block 18
call   33 never executed
    $$$$$:   94-block 19
    $$$$$:   94-block 20
call   34 never executed
    $$$$$:   94-block 21
        2:   95:    Course c1{"Painting", "optional", "Bob Ross", 4, 0};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   95-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   95-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   95-block  2
call   12 returned 1
call   13 returned 1
call   14 returned 1
call   15 returned 1
call   16 returned 1
call   17 returned 1
    $$$$$:   95-block  3
    $$$$$:   95-block  4
    $$$$$:   95-block  5
    $$$$$:   95-block  6
    $$$$$:   95-block  7
        2:   96:    Course c2{"Math", "optional", "Terry Tao", 8, 1};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   96-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   96-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   96-block  2
call   12 returned 1
call   13 returned 1
call   14 returned 1
call   15 returned 1
call   16 returned 1
call   17 returned 1
    $$$$$:   96-block  3
    $$$$$:   96-block  4
    $$$$$:   96-block  5
    $$$$$:   96-block  6
    $$$$$:   96-block  7
        2:   97:    Course c3{"Music", "optional", "Lena Raine", 5, 2};
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   97-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   97-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   97-block  2
call   12 returned 1
call   13 returned 1
call   14 returned 1
call   15 returned 1
call   16 returned 1
call   17 returned 1
    $$$$$:   97-block  3
    $$$$$:   97-block  4
    $$$$$:   97-block  5
    $$$$$:   97-block  6
    $$$$$:   97-block  7
        1:   98:    auto& repo = ctrl.getAll();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   99:
       1*:  100:    assert(repo.get_size() == 1);
        1:  100-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  100-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:  100-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:  100-block  3
    %%%%%:  100-block  4
       1*:  101:    assert(repo.at(0).to_str() == c1.to_str());
        1:  101-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  101-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  101-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  101-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1
    %%%%%:  101-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
        1:  101-block  5
    %%%%%:  101-block  6
        1:  101-block  7
branch 15 taken 1 (fallthrough)
branch 16 taken 0
        1:  101-block  8
call   17 returned 1
        1:  101-block  9
branch 18 taken 1 (fallthrough)
branch 19 taken 0
        1:  101-block 10
call   20 returned 1
    $$$$$:  101-block 11
branch 21 never executed
branch 22 never executed
    $$$$$:  101-block 12
call   23 never executed
    $$$$$:  101-block 13
    $$$$$:  101-block 14
branch 24 never executed
branch 25 never executed
    $$$$$:  101-block 15
call   26 never executed
    $$$$$:  101-block 16
        -:  102:
        1:  103:    ctrl.add_course("Math", "Terry Tao", "optional", "8");
        1:  103-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  103-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  103-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  103-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  103-block  4
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  103-block  5
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
    $$$$$:  103-block  6
call   27 never executed
    $$$$$:  103-block  7
    $$$$$:  103-block  8
call   28 never executed
    $$$$$:  103-block  9
    $$$$$:  103-block 10
call   29 never executed
    $$$$$:  103-block 11
    $$$$$:  103-block 12
call   30 never executed
    $$$$$:  103-block 13
    $$$$$:  103-block 14
call   31 never executed
    $$$$$:  103-block 15
    $$$$$:  103-block 16
call   32 never executed
    $$$$$:  103-block 17
    $$$$$:  103-block 18
call   33 never executed
    $$$$$:  103-block 19
    $$$$$:  103-block 20
call   34 never executed
    $$$$$:  103-block 21
        1:  104:    ctrl.add_course("Music", "Lena Raine", "optional", "5");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  104-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  104-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  104-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  104-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  104-block  4
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
    $$$$$:  104-block  5
call   27 never executed
    $$$$$:  104-block  6
    $$$$$:  104-block  7
call   28 never executed
    $$$$$:  104-block  8
    $$$$$:  104-block  9
call   29 never executed
    $$$$$:  104-block 10
    $$$$$:  104-block 11
call   30 never executed
    $$$$$:  104-block 12
    $$$$$:  104-block 13
call   31 never executed
    $$$$$:  104-block 14
    $$$$$:  104-block 15
call   32 never executed
    $$$$$:  104-block 16
    $$$$$:  104-block 17
call   33 never executed
    $$$$$:  104-block 18
    $$$$$:  104-block 19
call   34 never executed
    $$$$$:  104-block 20
        1:  105:    ctrl.add_course("Music part two", "Lena Raine", "optional", "5");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  105-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  105-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  105-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  105-block  3
call   16 returned 1
branch 17 taken 1 (fallthrough)
branch 18 taken 0 (throw)
        1:  105-block  4
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
    $$$$$:  105-block  5
call   27 never executed
    $$$$$:  105-block  6
    $$$$$:  105-block  7
call   28 never executed
    $$$$$:  105-block  8
    $$$$$:  105-block  9
call   29 never executed
    $$$$$:  105-block 10
    $$$$$:  105-block 11
call   30 never executed
    $$$$$:  105-block 12
    $$$$$:  105-block 13
call   31 never executed
    $$$$$:  105-block 14
    $$$$$:  105-block 15
call   32 never executed
    $$$$$:  105-block 16
    $$$$$:  105-block 17
call   33 never executed
    $$$$$:  105-block 18
    $$$$$:  105-block 19
call   34 never executed
    $$$$$:  105-block 20
        -:  106:
        -:  107:
        -:  108:    // bad add
        -:  109:    try
        -:  110:    {
       9*:  111:        ctrl.add_course("Music", "Lena Raine", "optional", "5");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  111-block  0
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  111-block  1
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  111-block  2
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  111-block  3
call   16 returned 1
branch 17 taken 0 (fallthrough)
branch 18 taken 1 (throw)
    %%%%%:  111-block  4
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
        1:  111-block  5
call   27 returned 1
        1:  111-block  6
        1:  111-block  7
call   28 returned 1
        1:  111-block  8
        1:  111-block  9
call   29 returned 1
        1:  111-block 10
        1:  111-block 11
call   30 returned 1
        1:  111-block 12
        1:  111-block 13
call   31 returned 1
        1:  111-block 14
        1:  111-block 15
call   32 returned 1
        1:  111-block 16
        1:  111-block 17
call   33 returned 1
        1:  111-block 18
        1:  111-block 19
call   34 returned 1
        1:  111-block 20
    #####:  112:        assert(false);
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  113:    }
        1:  114:    catch (std::invalid_argument&){}
        1:  114-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  114-block  1
call    2 returned 1
call    3 returned 1
        -:  115:    try
        -:  116:    {
       9*:  117:        ctrl.add_course("", "Lena Raine", "optional", "5");
        1:  117-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  117-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  117-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  117-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  117-block  4
call   16 returned 1
branch 17 taken 0 (fallthrough)
branch 18 taken 1 (throw)
    %%%%%:  117-block  5
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
        1:  117-block  6
call   27 returned 1
        1:  117-block  7
        1:  117-block  8
call   28 returned 1
        1:  117-block  9
        1:  117-block 10
call   29 returned 1
        1:  117-block 11
        1:  117-block 12
call   30 returned 1
        1:  117-block 13
        1:  117-block 14
call   31 returned 1
        1:  117-block 15
        1:  117-block 16
call   32 returned 1
        1:  117-block 17
        1:  117-block 18
call   33 returned 1
        1:  117-block 19
        1:  117-block 20
call   34 returned 1
        1:  117-block 21
    #####:  118:        assert(false);
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  119:    }
        1:  120:    catch (std::invalid_argument&){}
        1:  120-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  120-block  1
call    2 returned 1
call    3 returned 1
        -:  121:    try
        -:  122:    {
       9*:  123:        ctrl.add_course("Music", "", "optional", "5");
        1:  123-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  123-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  123-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  123-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  123-block  4
call   16 returned 1
branch 17 taken 0 (fallthrough)
branch 18 taken 1 (throw)
    %%%%%:  123-block  5
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
        1:  123-block  6
call   27 returned 1
        1:  123-block  7
        1:  123-block  8
call   28 returned 1
        1:  123-block  9
        1:  123-block 10
call   29 returned 1
        1:  123-block 11
        1:  123-block 12
call   30 returned 1
        1:  123-block 13
        1:  123-block 14
call   31 returned 1
        1:  123-block 15
        1:  123-block 16
call   32 returned 1
        1:  123-block 17
        1:  123-block 18
call   33 returned 1
        1:  123-block 19
        1:  123-block 20
call   34 returned 1
        1:  123-block 21
    #####:  124:        assert(false);
call    0 never executed
branch  1 never executed
branch  2 never executed
        1:  125:    } catch (std::invalid_argument&){}
        1:  125-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  125-block  1
call    2 returned 1
call    3 returned 1
        -:  126:    try
        -:  127:    {
       9*:  128:        ctrl.add_course("Music", "Lena Raine", "", "bad");
        1:  128-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  128-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  128-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  128-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  128-block  4
call   16 returned 1
branch 17 taken 0 (fallthrough)
branch 18 taken 1 (throw)
    %%%%%:  128-block  5
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
        1:  128-block  6
call   27 returned 1
        1:  128-block  7
        1:  128-block  8
call   28 returned 1
        1:  128-block  9
        1:  128-block 10
call   29 returned 1
        1:  128-block 11
        1:  128-block 12
call   30 returned 1
        1:  128-block 13
        1:  128-block 14
call   31 returned 1
        1:  128-block 15
        1:  128-block 16
call   32 returned 1
        1:  128-block 17
        1:  128-block 18
call   33 returned 1
        1:  128-block 19
        1:  128-block 20
call   34 returned 1
        1:  128-block 21
    #####:  129:        assert(false);
call    0 never executed
branch  1 never executed
branch  2 never executed
        1:  130:    } catch (std::invalid_argument&){}
        1:  130-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  130-block  1
call    2 returned 1
call    3 returned 1
        -:  131:    try
        -:  132:    {
       9*:  133:        ctrl.add_course("Music", "Lena Raine", "optional", "bad");
        1:  133-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  133-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  133-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  133-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  133-block  4
call   16 returned 1
branch 17 taken 0 (fallthrough)
branch 18 taken 1 (throw)
    %%%%%:  133-block  5
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
        1:  133-block  6
call   27 returned 1
        1:  133-block  7
        1:  133-block  8
call   28 returned 1
        1:  133-block  9
        1:  133-block 10
call   29 returned 1
        1:  133-block 11
        1:  133-block 12
call   30 returned 1
        1:  133-block 13
        1:  133-block 14
call   31 returned 1
        1:  133-block 15
        1:  133-block 16
call   32 returned 1
        1:  133-block 17
        1:  133-block 18
call   33 returned 1
        1:  133-block 19
        1:  133-block 20
call   34 returned 1
        1:  133-block 21
    #####:  134:        assert(false);
call    0 never executed
branch  1 never executed
branch  2 never executed
        1:  135:    } catch (std::invalid_argument&){}
        1:  135-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  135-block  1
call    2 returned 1
call    3 returned 1
        -:  136:
        1:  137:    auto& cc = ctrl.getCourse("Math");
        1:  137-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  137-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  137-block  2
call    7 returned 1
call    8 returned 1
    $$$$$:  137-block  3
call    9 never executed
    $$$$$:  137-block  4
    $$$$$:  137-block  5
call   10 never executed
    $$$$$:  137-block  6
       1*:  138:    assert(cc.to_str() == c2.to_str());
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  138-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  138-block  1
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  138-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
        1:  138-block  3
    %%%%%:  138-block  4
        1:  138-block  5
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:  138-block  6
call   14 returned 1
        1:  138-block  7
branch 15 taken 1 (fallthrough)
branch 16 taken 0
        1:  138-block  8
call   17 returned 1
    $$$$$:  138-block  9
branch 18 never executed
branch 19 never executed
    $$$$$:  138-block 10
call   20 never executed
    $$$$$:  138-block 11
    $$$$$:  138-block 12
branch 21 never executed
branch 22 never executed
    $$$$$:  138-block 13
call   23 never executed
    $$$$$:  138-block 14
        -:  139:
        2:  140:    auto vec = ctrl.getCoursesMatchingHPW("5", "8");
        1:  140-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  140-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  140-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
call   11 returned 1
call   12 returned 1
call   13 returned 1
    $$$$$:  140-block  3
    $$$$$:  140-block  4
    $$$$$:  140-block  5
    $$$$$:  140-block  6
       1*:  141:    assert(vec->size() == 3);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  141-block  0
call    4 never executed
branch  5 never executed
branch  6 never executed
        1:  141-block  1
    %%%%%:  141-block  2
        -:  142:
        -:  143:    try {
       5*:  144:        ctrl.getCoursesMatchingHPW("8", "5");
        1:  144-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  144-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  144-block  2
call    8 returned 1
branch  9 taken 0 (fallthrough)
branch 10 taken 1 (throw)
    %%%%%:  144-block  3
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
        1:  144-block  4
call   16 returned 1
        1:  144-block  5
        1:  144-block  6
call   17 returned 1
        1:  144-block  7
        1:  144-block  8
call   18 returned 1
        1:  144-block  9
        1:  144-block 10
call   19 returned 1
        1:  144-block 11
    #####:  145:        assert(false);
call    0 never executed
branch  1 never executed
branch  2 never executed
        1:  146:    } catch(std::invalid_argument& e){}
        1:  146-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  146-block  1
call    2 returned 1
call    3 returned 1
        -:  147:
        -:  148:    try {
       5*:  149:        ctrl.getCoursesMatchingHPW("asdsad", "bad");
        1:  149-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  149-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  149-block  2
call    8 returned 1
branch  9 taken 0 (fallthrough)
branch 10 taken 1 (throw)
    %%%%%:  149-block  3
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
        1:  149-block  4
call   16 returned 1
        1:  149-block  5
        1:  149-block  6
call   17 returned 1
        1:  149-block  7
        1:  149-block  8
call   18 returned 1
        1:  149-block  9
        1:  149-block 10
call   19 returned 1
        1:  149-block 11
    #####:  150:        assert(false);
call    0 never executed
branch  1 never executed
branch  2 never executed
        1:  151:    } catch(std::invalid_argument& e){}
        1:  151-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  151-block  1
call    2 returned 1
call    3 returned 1
        -:  152:
        2:  153:    auto vec2 = ctrl.getCoursesMatchingTeacher("Lena Raine");
        1:  153-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  153-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
    $$$$$:  153-block  2
    $$$$$:  153-block  3
       1*:  154:    assert(vec2->size() == 2);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  154-block  0
call    4 never executed
branch  5 never executed
branch  6 never executed
        1:  154-block  1
    %%%%%:  154-block  2
        -:  155:
        2:  156:    auto vec3 = ctrl.getSortedBy("hours");
        1:  156-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  156-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
    $$$$$:  156-block  2
    $$$$$:  156-block  3
       1*:  157:    assert(vec3->size() == 4);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  157-block  0
call    4 never executed
branch  5 never executed
branch  6 never executed
        1:  157-block  1
    %%%%%:  157-block  2
       1*:  158:    assert(vec3->at(0).to_str() == c1.to_str());
        1:  158-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  158-block  1
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  158-block  2
call    8 returned 1
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:  158-block  3
call   11 never executed
branch 12 never executed
branch 13 never executed
        1:  158-block  4
    %%%%%:  158-block  5
        1:  158-block  6
branch 14 taken 1 (fallthrough)
branch 15 taken 0
        1:  158-block  7
call   16 returned 1
        1:  158-block  8
branch 17 taken 1 (fallthrough)
branch 18 taken 0
        1:  158-block  9
call   19 returned 1
    $$$$$:  158-block 10
branch 20 never executed
branch 21 never executed
    $$$$$:  158-block 11
call   22 never executed
    $$$$$:  158-block 12
    $$$$$:  158-block 13
branch 23 never executed
branch 24 never executed
    $$$$$:  158-block 14
call   25 never executed
    $$$$$:  158-block 15
        -:  159:
        2:  160:    auto vec4 = ctrl.getSortedBy("name");
        1:  160-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  160-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
    $$$$$:  160-block  2
    $$$$$:  160-block  3
       1*:  161:    assert(vec4->size() == 4);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  161-block  0
call    4 never executed
branch  5 never executed
branch  6 never executed
        1:  161-block  1
    %%%%%:  161-block  2
       1*:  162:    assert(vec4->at(0).to_str() == c2.to_str());
        1:  162-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  162-block  1
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  162-block  2
call    8 returned 1
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:  162-block  3
call   11 never executed
branch 12 never executed
branch 13 never executed
        1:  162-block  4
    %%%%%:  162-block  5
        1:  162-block  6
branch 14 taken 1 (fallthrough)
branch 15 taken 0
        1:  162-block  7
call   16 returned 1
        1:  162-block  8
branch 17 taken 1 (fallthrough)
branch 18 taken 0
        1:  162-block  9
call   19 returned 1
    $$$$$:  162-block 10
branch 20 never executed
branch 21 never executed
    $$$$$:  162-block 11
call   22 never executed
    $$$$$:  162-block 12
    $$$$$:  162-block 13
branch 23 never executed
branch 24 never executed
    $$$$$:  162-block 14
call   25 never executed
    $$$$$:  162-block 15
        -:  163:
        2:  164:    auto vec5 = ctrl.getSortedBy("teacher");
        1:  164-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  164-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
    $$$$$:  164-block  2
    $$$$$:  164-block  3
       1*:  165:    assert(vec5->size() == 4);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  165-block  0
call    4 never executed
branch  5 never executed
branch  6 never executed
        1:  165-block  1
    %%%%%:  165-block  2
       1*:  166:    assert(vec5->at(0).to_str() == c1.to_str());
        1:  166-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  166-block  1
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  166-block  2
call    8 returned 1
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:  166-block  3
call   11 never executed
branch 12 never executed
branch 13 never executed
        1:  166-block  4
    %%%%%:  166-block  5
        1:  166-block  6
branch 14 taken 1 (fallthrough)
branch 15 taken 0
        1:  166-block  7
call   16 returned 1
        1:  166-block  8
branch 17 taken 1 (fallthrough)
branch 18 taken 0
        1:  166-block  9
call   19 returned 1
    $$$$$:  166-block 10
branch 20 never executed
branch 21 never executed
    $$$$$:  166-block 11
call   22 never executed
    $$$$$:  166-block 12
    $$$$$:  166-block 13
branch 23 never executed
branch 24 never executed
    $$$$$:  166-block 14
call   25 never executed
    $$$$$:  166-block 15
        -:  167:
        1:  168:    ctrl.modify_course("2", "Math", "Terry Tao", "optional", "10");
        1:  168-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  168-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  168-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  168-block  3
call   12 returned 1
call   13 returned 1
branch 14 taken 1 (fallthrough)
branch 15 taken 0 (throw)
        1:  168-block  4
call   16 returned 1
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        1:  168-block  5
call   20 returned 1
branch 21 taken 1 (fallthrough)
branch 22 taken 0 (throw)
        1:  168-block  6
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
call   27 returned 1
call   28 returned 1
call   29 returned 1
call   30 returned 1
call   31 returned 1
call   32 returned 1
    $$$$$:  168-block  7
call   33 never executed
    $$$$$:  168-block  8
    $$$$$:  168-block  9
call   34 never executed
    $$$$$:  168-block 10
    $$$$$:  168-block 11
call   35 never executed
    $$$$$:  168-block 12
    $$$$$:  168-block 13
call   36 never executed
    $$$$$:  168-block 14
    $$$$$:  168-block 15
call   37 never executed
    $$$$$:  168-block 16
    $$$$$:  168-block 17
call   38 never executed
    $$$$$:  168-block 18
    $$$$$:  168-block 19
call   39 never executed
    $$$$$:  168-block 20
    $$$$$:  168-block 21
call   40 never executed
    $$$$$:  168-block 22
    $$$$$:  168-block 23
call   41 never executed
    $$$$$:  168-block 24
    $$$$$:  168-block 25
call   42 never executed
    $$$$$:  168-block 26
        -:  169:
        1:  170:    ctrl.remove_course("0");
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  170-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  170-block  1
call    7 returned 1
call    8 returned 1
    $$$$$:  170-block  2
call    9 never executed
    $$$$$:  170-block  3
    $$$$$:  170-block  4
call   10 never executed
    $$$$$:  170-block  5
       1*:  171:    assert(ctrl.getAll().get_size() == 3);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  171-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  171-block  1
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:  171-block  2
call    8 never executed
branch  9 never executed
branch 10 never executed
        1:  171-block  3
    %%%%%:  171-block  4
        1:  172:}
        1:  172-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
call    6 returned 1
call    7 returned 1
call    8 returned 1
    $$$$$:  172-block  1
call    9 never executed
    $$$$$:  172-block  2
call   10 never executed
    $$$$$:  172-block  3
call   11 never executed
    $$$$$:  172-block  4
call   12 never executed
    $$$$$:  172-block  5
call   13 never executed
    $$$$$:  172-block  6
call   14 never executed
    $$$$$:  172-block  7
call   15 never executed
    $$$$$:  172-block  8
call   16 never executed
    $$$$$:  172-block  9
call   17 never executed
        -:  173:
function _Z10testVectorv called 1 returned 100% blocks executed 54%
        1:  174:void testVector(){
        2:  175:    Course c1{"Painting", "optional", "Bob Ross", 4, 0};
        1:  175-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  175-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  175-block  2
call    8 returned 1
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  175-block  3
call   12 returned 1
call   13 returned 1
call   14 returned 1
call   15 returned 1
call   16 returned 1
call   17 returned 1
    $$$$$:  175-block  4
    $$$$$:  175-block  5
    $$$$$:  175-block  6
    $$$$$:  175-block  7
    $$$$$:  175-block  8
        1:  176:    Vector<Course> vector;
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  177:
      101:  178:    for(int i = 0; i < 100; ++i){
        1:  178-block  0
      100:  178-block  1
      101:  178-block  2
branch  0 taken 100
branch  1 taken 1 (fallthrough)
      100:  179:        vector.push_back(c1);
      100:  179-block  0
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
        -:  180:    }
        -:  181:
      101:  182:    for(int i = 0; i < 100; ++i){
        1:  182-block  0
      101:  182-block  1
branch  0 taken 100
branch  1 taken 1 (fallthrough)
     100*:  183:        assert(vector.at(i).to_str() == c1.to_str());
      100:  183-block  0
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
      100:  183-block  1
call    3 returned 100
call    4 returned 100
branch  5 taken 100 (fallthrough)
branch  6 taken 0 (throw)
      100:  183-block  2
call    7 returned 100
branch  8 taken 0 (fallthrough)
branch  9 taken 100
    %%%%%:  183-block  3
call   10 never executed
branch 11 never executed
branch 12 never executed
      100:  183-block  4
    %%%%%:  183-block  5
      100:  183-block  6
branch 13 taken 100 (fallthrough)
branch 14 taken 0
      100:  183-block  7
call   15 returned 100
      100:  183-block  8
branch 16 taken 100 (fallthrough)
branch 17 taken 0
      100:  183-block  9
call   18 returned 100
    $$$$$:  183-block 10
branch 19 never executed
branch 20 never executed
    $$$$$:  183-block 11
call   21 never executed
    $$$$$:  183-block 12
    $$$$$:  183-block 13
branch 22 never executed
branch 23 never executed
    $$$$$:  183-block 14
call   24 never executed
    $$$$$:  183-block 15
     100*:  184:        assert(vector[i].to_str() == c1.to_str());
      100:  184-block  0
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
      100:  184-block  1
call    3 returned 100
call    4 returned 100
branch  5 taken 100 (fallthrough)
branch  6 taken 0 (throw)
      100:  184-block  2
call    7 returned 100
branch  8 taken 0 (fallthrough)
branch  9 taken 100
    %%%%%:  184-block  3
call   10 never executed
branch 11 never executed
branch 12 never executed
      100:  184-block  4
    %%%%%:  184-block  5
      100:  184-block  6
branch 13 taken 100 (fallthrough)
branch 14 taken 0
      100:  184-block  7
call   15 returned 100
      100:  184-block  8
branch 16 taken 100 (fallthrough)
branch 17 taken 0
      100:  184-block  9
call   18 returned 100
      100:  184-block 10
    $$$$$:  184-block 11
branch 19 never executed
branch 20 never executed
    $$$$$:  184-block 12
call   21 never executed
    $$$$$:  184-block 13
    $$$$$:  184-block 14
branch 22 never executed
branch 23 never executed
    $$$$$:  184-block 15
call   24 never executed
    $$$$$:  184-block 16
        -:  185:    }
        -:  186:
        1:  187:    auto v2 = vector;
        1:  187-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  188:
      101:  189:    for(int i = 0; i < 100; ++i){
        1:  189-block  0
      101:  189-block  1
branch  0 taken 100
branch  1 taken 1 (fallthrough)
     100*:  190:        assert(v2.at(i).to_str() == c1.to_str());
      100:  190-block  0
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
      100:  190-block  1
call    3 returned 100
call    4 returned 100
branch  5 taken 100 (fallthrough)
branch  6 taken 0 (throw)
      100:  190-block  2
call    7 returned 100
branch  8 taken 0 (fallthrough)
branch  9 taken 100
    %%%%%:  190-block  3
call   10 never executed
branch 11 never executed
branch 12 never executed
      100:  190-block  4
    %%%%%:  190-block  5
      100:  190-block  6
branch 13 taken 100 (fallthrough)
branch 14 taken 0
      100:  190-block  7
call   15 returned 100
      100:  190-block  8
branch 16 taken 100 (fallthrough)
branch 17 taken 0
      100:  190-block  9
call   18 returned 100
      100:  190-block 10
    $$$$$:  190-block 11
branch 19 never executed
branch 20 never executed
    $$$$$:  190-block 12
call   21 never executed
    $$$$$:  190-block 13
    $$$$$:  190-block 14
branch 22 never executed
branch 23 never executed
    $$$$$:  190-block 15
call   24 never executed
    $$$$$:  190-block 16
        -:  191:    }
        1:  192:}
        1:  192-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:  192-block  1
call    3 never executed
    $$$$$:  192-block  2
call    4 never executed
    $$$$$:  192-block  3
call    5 never executed
        -:  193:
function _Z13run_all_testsv called 1 returned 100% blocks executed 100%
        1:  194:void run_all_tests() {
        1:  195:  testDomain();
        1:  195-block  0
call    0 returned 1
        1:  196:  testValidate();
call    0 returned 1
        1:  197:  testRepo();
call    0 returned 1
        1:  198:  testControl();
call    0 returned 1
        1:  199:  testVector();
call    0 returned 1
        -:  200:
        1:  201:  std::cout << "All tests ran successfully!" << std::endl;
call    0 returned 1
call    1 returned 1
        1:  202:}
