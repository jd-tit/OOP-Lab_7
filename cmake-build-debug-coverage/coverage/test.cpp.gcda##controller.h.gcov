        -:    0:Source:C:/Projects/fac/OOP/Lab5_Contract_de_studii/controller.h
        -:    0:Graph:C:\Projects\fac\OOP\Lab5_Contract_de_studii\cmake-build-debug-coverage\CMakeFiles\Lab5_Contract_de_studii.dir\test.cpp.gcno
        -:    0:Data:C:\Projects\fac\OOP\Lab5_Contract_de_studii\cmake-build-debug-coverage\CMakeFiles\Lab5_Contract_de_studii.dir\test.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by jdt on 3/27/2022.
        -:    3://
        -:    4:
        -:    5:#ifndef LAB5_CONTRACT_DE_STUDII_CONTROLLER_H
        -:    6:#define LAB5_CONTRACT_DE_STUDII_CONTROLLER_H
        -:    7:
        -:    8:#include <string>
        -:    9:#include <memory>
        -:   10:
        -:   11:#include "domain.h"
        -:   12:#include "repo.h"
        -:   13:
        -:   14:class ContractController {
        -:   15:private:
        -:   16:  Repo<Course> i_repo;
        -:   17:public:
function _ZN18ContractControllerC1Ev called 1 returned 100% blocks executed 100%
        1:   18:  ContractController() : i_repo(Repo<Course>()){}
        1:   18-block  0
call    0 returned 1
        -:   19:
        -:   20:  /**
        -:   21:   * Add a course to the internal repository.
        -:   22:   * @param name
        -:   23:   * @param teacher
        -:   24:   * @param type
        -:   25:   * @param hours_per_week
        -:   26:   */
        -:   27:  void add_course(const std::string& name, const std::string& teacher,
        -:   28:                         const std::string& type,
        -:   29:                         const std::string& hours_per_week);
        -:   30:
        -:   31:  /**
        -:   32:   * Get const-restricted acces to the internal repository.
        -:   33:   * @return
        -:   34:   */
        -:   35:  [[nodiscard]] const Repo<Course> & getAll();
        -:   36:
        -:   37:
        -:   38:/**
        -:   39: * Remove a course from the internal repo.
        -:   40: * @param id_buff Buffer containing the id of the course to be removed.
        -:   41: */
        -:   42:  void remove_course(const std::string& id_buff);
        -:   43:
        -:   44:  /**
        -:   45:   * Modify a course.
        -:   46:   * @param id_buff Buffer containing the id of the course to be edited.
        -:   47:   * @param name The new name
        -:   48:   * @param teacher The new Teacher's name
        -:   49:   * @param type The new type of the course
        -:   50:   * @param hours_per_week The new number of hours per week.
        -:   51:   */
        -:   52:  void modify_course(const std::string& id_buff, const std::string& name,
        -:   53:                     const std::string& teacher,
        -:   54:                     const std::string& type,
        -:   55:                     const std::string& hours_per_week);
        -:   56:
        -:   57:  /**
        -:   58:   * Get the course matching a given course name.
        -:   59:   * @param name
        -:   60:   * @return
        -:   61:   */
        -:   62:  const Course &getCourse(const std::string& name);
        -:   63:
        -:   64:  /**
        -:   65:   * Get all courses that have a number of hours per week in the range [start, stop]
        -:   66:   * @param start_buff Buffer containing the start number
        -:   67:   * @param stop_buff Buffer containing the stop number.
        -:   68:   * @return
        -:   69:   */
        -:   70:  std::unique_ptr<Vector<Course>>
        -:   71:  getCoursesMatchingHPW(const std::string& start_buff, const std::string& stop_buff);
        -:   72:
        -:   73:/**
        -:   74: * Get all courses that have a given teacher.
        -:   75: * @param teacher_name
        -:   76: * @return
        -:   77: */
        -:   78:  std::unique_ptr<Vector<Course>>
        -:   79:  getCoursesMatchingTeacher(const std::string& teacher_name);
        -:   80:
        -:   81:  /**
        -:   82:   * Get all of the courses, sorted by a given criterion
        -:   83:   * @param criterion The criterion to sort by.
        -:   84:   * @return A copy of the internal repository, sorted accordingly.
        -:   85:   */
        -:   86:  std::unique_ptr<Vector<Course>> getSortedBy(const std::string& criterion);
        -:   87:};
        -:   88:
        -:   89:#endif //LAB5_CONTRACT_DE_STUDII_CONTROLLER_H
